package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import org.firstinspires.ftc.robotcore.external.JavaUtil;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.Servo;

@TeleOp(name = "OnePlayerTeleop (uhhers is dumbbb)")
public class OnePlayerTeleop extends LinearOpMode {

  private Servo lifter;
  private DcMotor leftRear;
  private DcMotor leftFront;
  private DcMotor rightFront;
  private DcMotor rightRear;

  private int currentLifterPos = 0;
  private final double[] variableLifterPos = {0, 0.5, 1};

  @Override
  public void runOpMode() {
    
    leftDrive = hardwareMap.get(DcMotor.class, "leftDrive");
    rightDrive = hardwareMap.get(DcMotor.class, "rightDrive");
		lifter = hardwareMap.get(Servo.class, "lifter");
		
    waitForStart();
    if (opModeIsActive()) {
			
      while (opModeIsActive()) {
        float speed = gamepad1.left_stick_y;
        float turn = gamepad1.right_stick_x;
				boolean lifterDown = gamepad1.a;
				boolean bButton = gamepad1.b;
				boolean xButton = gamepad1.x;
				boolean lifterUp = gamepad1.y;

        if (lifterDown) {
          moveLifter(-1);
        } else if (lifterUp) {
          moveLifter(1);
        }

        leftDrive.setPower(speed + turn);
        rightDrive.setPower(speed - turn);
      }
    }
  }

  private void moveLifter(int dir) {
    int newIndex = currentLifterPos + dir;
    if (newIndex >= 0 && newIndex < variableLifterPos.length) {
      lifter.setPosition(variableLifterPos[newIndex]);
      currentLifterPos = newIndex;
    }
  }

}
